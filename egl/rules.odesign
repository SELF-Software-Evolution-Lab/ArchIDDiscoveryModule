<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/tree/description/1.0.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" name="rules" version="11.1.1.201610211630">
  <ownedViewpoints name="Archtoring" label="Archtoring">
    <ownedRepresentations xsi:type="description_1:TreeDescription" name="tree" label="RuleModel" titleExpression="Rules Model" domainClass="Rules.ReferenceArchitecture">
      <metamodel href="rules.ecore#/"/>
      <subItemMappings name="rule" label="Rule" domainClass="Rules.Rule" semanticCandidatesExpression="feature:eAllContents">
        <defaultStyle labelExpression="feature:title">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="pattern" label="Pattern" domainClass="Rules.Pattern" semanticCandidatesExpression="feature:eAllContents">
          <defaultStyle labelExpression="feature:eplFilePath">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
        </subItemMappings>
        <create name="createRule" label="Create New Pattern" forceRefresh="true" mapping="//@ownedViewpoints[name='Archtoring']/@ownedRepresentations[name='tree']/@subItemMappings[name='rule']">
          <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="var:element">
            <subModelOperations xsi:type="tool:CreateInstance" typeName="Rules.Pattern" referenceName="patterns">
              <subModelOperations xsi:type="tool:SetValue" featureName="eplFilePath" valueExpression="PatternPath"/>
            </subModelOperations>
          </firstModelOperation>
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
        </create>
      </subItemMappings>
      <createTreeItem name="createRule" label="Create New Rule" forceRefresh="true" mapping="//@ownedViewpoints[name='Archtoring']/@ownedRepresentations[name='tree']/@subItemMappings[name='rule']">
        <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="var:container">
          <subModelOperations xsi:type="tool:CreateInstance" typeName="Rules.Rule" referenceName="rules">
            <subModelOperations xsi:type="tool:SetValue" featureName="title" valueExpression="New Rule"/>
          </subModelOperations>
        </firstModelOperation>
        <variables name="root" documentation="The semantic element of the tree."/>
        <variables name="element" documentation="The currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
      </createTreeItem>
    </ownedRepresentations>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" identifier="Properties">
    <pages identifier="ElementRefs" labelExpression="Element References" domainClass="Rules.Rule" semanticCandidateExpression="var:self" groups="//@extensions.0/@groups.0"/>
    <pages identifier="PatternFile" labelExpression="PatternFile" domainClass="Rules.Pattern" semanticCandidateExpression="var:self" groups="//@extensions.0/@groups.1"/>
    <groups identifier="ElementRefsGroup" labelExpression="Select Element References for this Rule" domainClass="Rules.Rule" semanticCandidateExpression="var:self">
      <controls xsi:type="properties:DynamicMappingFor" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
        <ifs predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
          <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" identifier="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
        </ifs>
      </controls>
      <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" referenceNameExpression="aql:eStructuralFeature.name"/>
    </groups>
    <groups identifier="PatternFileGroup" labelExpression="Select Pattern File" semanticCandidateExpression="var:self">
      <controls xsi:type="properties:LabelDescription" labelExpression="File Path:" isEnabledExpression="acl:false" valueExpression="feature:eplFilePath"/>
      <controls xsi:type="properties:ButtonDescription" isEnabledExpression="acl:true" buttonLabelExpression="Select Pattern File">
        <initialOperation>
          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
            <subModelOperations xsi:type="tool:SetValue" featureName="feature:eplFilePath" valueExpression="path"/>
            <subModelOperations xsi:type="tool:ExternalJavaActionCall"/>
          </firstModelOperations>
        </initialOperation>
      </controls>
    </groups>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" identifier="org.eclipse.sirius.ui.properties">
    <pages identifier="org.eclipse.sirius.ui.properties.defaultpage" labelExpression="aql:input.emfEditServices(self).getTabName()" semanticCandidateExpression="aql:input.getAllSemanticElements()" groups="//@extensions.1/@groups.0"/>
    <groups identifier="org.eclipse.sirius.ui.properties.defaultgroup" labelExpression="Properties" semanticCandidateExpression="var:self" preconditionExpression="">
      <controls xsi:type="properties:DynamicMappingFor" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
        <ifs predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
          <widget xsi:type="properties:TextDescription" identifier="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
            </initialOperation>
            <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
              <style>
                <labelFontFormat>bold</labelFontFormat>
              </style>
            </conditionalStyles>
          </widget>
        </ifs>
        <ifs predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
          <widget xsi:type="properties:TextAreaDescription" identifier="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
            </initialOperation>
            <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
              <style>
                <labelFontFormat>bold</labelFontFormat>
              </style>
            </conditionalStyles>
          </widget>
        </ifs>
        <ifs predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature)">
          <widget xsi:type="properties:CheckboxDescription" identifier="sirius_default_rules_mono_boolean" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
            </initialOperation>
            <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
              <style>
                <labelFontFormat>bold</labelFontFormat>
              </style>
            </conditionalStyles>
          </widget>
        </ifs>
        <ifs predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many)">
          <widget xsi:type="properties:RadioDescription" identifier="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
            </initialOperation>
            <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
              <style>
                <labelFontFormat>bold</labelFontFormat>
              </style>
            </conditionalStyles>
          </widget>
        </ifs>
        <ifs predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
          <widget xsi:type="properties:ListDescription" identifier="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
        </ifs>
        <ifs predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
          <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" identifier="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
        </ifs>
      </controls>
    </groups>
  </extensions>
</description:Group>
