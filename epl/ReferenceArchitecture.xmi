<?xml version="1.0" encoding="UTF-8"?>
<Rules:ReferenceArchitecture xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:Rules="https://www.uniandes.edu.co/archtoring" umlModel="desarrollo">
  <structuralElements umlElement="logic"/>
  <structuralElements umlElement="dtos"/>
  <structuralElements umlElement="services"/>
  <structuralElements umlElement="entities"/>
  <decisions title="DTOs Usage" associatedQA="//@attributes.0">
    <rules title="DTOs must implement Serializable." debt="10" severity="Major" structuralElement="//@structuralElements.1" id="1" category="Bug"/>
    <rules title="DTOs must have an empty constructor for serializing" debt="10" severity="Major" structuralElement="//@structuralElements.1" id="2" category="Bug"/>
    <rules title="DTOS must have only serializable fields" debt="10" severity="Major" structuralElement="//@structuralElements.1" id="3" category="Bug"/>
    <rules title="All fields on DTOS must have getters and setters" debt="10" severity="Major" structuralElement="//@structuralElements.1" id="4" category="Bug"/>
    <rules title="DTOs must have a constructor with an Entity as parameter" debt="10" severity="Major" structuralElement="//@structuralElements.1" id="5" category="Bug"/>
    <rules title="toEntity methods in DTOs must convert the object to an Entity" debt="10" severity="Major" structuralElement="//@structuralElements.1" id="6" category="Bug"/>
    <rules title="Getters and Setters on DTOs must manage serializable types only" debt="10" severity="Major" structuralElement="//@structuralElements.1" id="18" category="Bug"/>
  </decisions>
  <decisions title="DetailDTOs Usage" associatedQA="//@attributes.0">
    <rules title="Fields on DetailDTOs must be of type DTO or List" debt="10" severity="Major" structuralElement="//@structuralElements.1" id="7" category="Bug"/>
    <rules title="DetailDTOs must have a constructor with an Entity as parameter" debt="10" severity="Major" structuralElement="//@structuralElements.1" id="8" category="Bug"/>
    <rules title="toEntity methods in DetailDTOs must convert the object to an Entity" debt="10" severity="Major" structuralElement="//@structuralElements.1" id="9" category="Bug"/>
    <rules title="Resource GET methods must return DetailDTOs so their info is properly displayed" debt="10" severity="Minor" structuralElement="//@structuralElements.1" id="17" category="Bug"/>
  </decisions>
  <decisions title="Layered Architecture" associatedQA="//@attributes.1">
    <rules title="Resource classes must have a Path annotation" debt="10" severity="Major" structuralElement="//@structuralElements.2" id="10" category="Bug"/>
    <rules title="Resource classes must have a Consumes annotation" debt="10" severity="Major" structuralElement="//@structuralElements.2" id="11" category="Bug"/>
    <rules title="Resource classes must have a Produces annotation" debt="10" severity="Major" structuralElement="//@structuralElements.2" id="12" category="Bug"/>
    <rules title="Logic layer classes must be annotated with Stateless" debt="10" severity="Major" structuralElement="//@structuralElements.0" id="14" category="Bug"/>
    <rules title="Resources must check for existence of entity and throws WebApplicationException if missing" debt="10" severity="Minor" structuralElement="//@structuralElements.2" id="16" category="Bug"/>
  </decisions>
  <decisions title="Dependency Injection" associatedQA="//@attributes.0">
    <rules title="Resource classes must have a logic injection as field" debt="10" severity="Major" structuralElement="//@structuralElements.2" id="13" category="ATD Item"/>
    <rules title="Logic classes must have a persistence injection as field" debt="10" severity="Major" structuralElement="//@structuralElements.0" id="15" category="ATD Item"/>
  </decisions>
  <decisions title="Entities Usage" associatedQA="//@attributes.0">
    <rules title="Entities must implement Serializable" debt="10" severity="Major" structuralElement="//@structuralElements.3" id="19" category="Bug"/>
    <rules title="Fields on Entities must be of type Entity, List or non-primitive" debt="10" severity="Major" structuralElement="//@structuralElements.3" id="20" category="Bug"/>
    <rules title="All fields on Entities must have getters and setters" debt="10" severity="Major" structuralElement="//@structuralElements.3" id="21" category="Bug"/>
    <rules title="Getters and Setters on Entities must manage serializable types only" debt="10" severity="Major" structuralElement="//@structuralElements.3" id="22" category="Bug"/>
  </decisions>
  <attributes name="maintainability"/>
  <attributes name="modularity"/>
</Rules:ReferenceArchitecture>
